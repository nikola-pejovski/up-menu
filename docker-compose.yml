version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: up-menu-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: upmenu
      POSTGRES_USER: upmenu_user
      POSTGRES_PASSWORD: upmenu_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - up-menu-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U upmenu_user -d upmenu"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: up-menu-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - up-menu-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application (for production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: up-menu-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://upmenu_user:upmenu_password@postgres:5432/upmenu
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=your-secret-key-here
      - NEXTAUTH_URL=http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - up-menu-network
    volumes:
      - ./public/uploads:/app/public/uploads

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  up-menu-network:
    driver: bridge
